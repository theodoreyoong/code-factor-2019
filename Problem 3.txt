Problem 3
Sort an Array
Given an array of integers, sort the array in ascending order. The sort method is that an array element can be moved to the end in one move. Determine the minimum number of moves required to sort the array.
For example, given arr=[5,1,3,2], we move the value arr[2]=3 to the end and arr becomes [5,1,2,3]. Next, we move arr[0]=5 to the edn to achieve the sorted array, and arr becomes [1,2,3,5]. This took two moves, which is the minimum number of moves.
Function Description
Complete the function getMinimumMoves in the editor below. The function must return an integer which is the minimum number of moves needed to sort the array in ascending order.
getMinimumMoves has the following parameter:
arr[arr[0],â€¦,arr[n-1]]: an array of integers.
Constraints
1<=n<=10^5
0<=arr[i]<=10^6
Sample Case 0
arr=[1,2,3]
The array is already sorted, so no moves are necessary.
Sample Case 1
cost = [1,3,2]
Move the element arr[1]=3 to the end to yield a new arr=[1,2,3]. The array was sorted with one move.
